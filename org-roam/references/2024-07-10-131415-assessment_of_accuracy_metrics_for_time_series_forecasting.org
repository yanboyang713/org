:PROPERTIES:
:ID:       57c5c5ee-0e5c-461f-ad84-529e1baf94bb
:END:
#+title: Assessment of Accuracy Metrics for Time Series Forecasting

[[id:632ab9ee-b7d2-4504-97e2-25009469c495][time series forecasting]]

* Accuracy Metrics
** Summary
+ Use MAE (Mean Absolute Error) and RMSE (Root Mean Squared Error) when you want to measure the magnitude of errors and need a metric that is easy to interpret. RMSE is preferred when larger errors should be penalized more heavily.
+ Use MAPE (Mean Absolute Percentage Error) and SMAPE (Symmetric Mean Absolute Percentage Error) when you want to express errors as percentages of actual values and need a metric that is suitable for comparing forecast performance across different datasets.
+ Use MDAPE (Median Absolute Percentage Error) when dealing with time series data that may have outliers or extreme values. MDAPE is robust to outliers because it calculates the median of the absolute percentage errors.
+ Use GMRAE (Geometric Mean Relative Absolute Error) when you want to compare forecast performance across different time series with varying scales. GMRAE provides a balanced measure of forecast accuracy across multiple forecasts.

** Mean Absolute Error (MAE)
:PROPERTIES:
:ID:       408fa520-d7bd-4d4f-ba42-a9e9d690eb24
:END:
The Mean Absolute Error (MAE) is a commonly used metric for measuring the accuracy of predictions or forecasts. It quantifies the average absolute difference between the predicted or forecasted values and the actual values. The formula for calculating MAE is as follows:

MAE = (1 / n) * Σ |actual — forecast|

Where:

MAE is the Mean Absolute Error.

n is the number of data points (samples).

Σ represents the sum over all data points.

|actual — forecast| is the absolute difference between the actual value and the forecasted value for each data point.

Let’s find the MAE for our data.
#+begin_src python
# Calculate Mean Absolute Error (MAE)
mae = mean_absolute_error(final_test_data['y'], final_test_data['AutoARIMA'])
# Print MAE
print(f"Mean Absolute Error (MAE): {mae:.4f}")
#+end_src

Output :- Mean Absolute Error (MAE): 2.8489

MAE of 2.8489 indicates that, on average, our forecasts are off by about 2.8489 units from the actual values. A lower MAE suggests better accuracy, while a higher MAE indicates less accurate forecasts.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*-FKHYBYZ9lwT5AllGTpzhw.png]]

** Root Mean Squared Error (RMSE)
:PROPERTIES:
:ID:       e4617ee2-3c65-4752-91e6-d2ea8e4e18d8
:END:
The Root Mean Squared Error (RMSE) is another widely used metric for measuring the accuracy of predictions or forecasts. RMSE quantifies the average magnitude of errors between the predicted or forecasted values and the actual values, giving more weight to larger errors. It’s an important metric, especially when larger errors are of greater concern. The mathematical expression for calculating RMSE is as follows:

RMSE = √((1 / n) * Σ(actual — forecast)²)

Where:

RMSE is the Root Mean Squared Error.

n is the number of data points (samples).

Σ represents the sum over all data points.

(actual — forecast)² is the squared difference between the actual value and the forecasted value for each data point.

Let us check the RMSE for this data:

#+begin_src python
# Calculate the Root Mean Squared Error (RMSE)
rmse = mean_squared_error(final_test_data['y'], final_test_data['AutoARIMA'],
                          squared=False)

# Print the RMSE
print(f"Root Mean Squared Error (RMSE): {rmse:.4f}")
#+end_src

Output :- Root Mean Squared Error (RMSE): 3.8863

RMSE quantifies the average magnitude of the errors. In this case, an RMSE of 3.8863 suggests that, on average, the forecasts are off by about 3.8863 units from the actual values.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*Bab56vfYMnbSvY3tBGxbjA.png]]

** Mean Absolute Percentage Error (MAPE)
:PROPERTIES:
:ID:       d531670a-aad9-4c1a-9dbd-c6acfdf8e015
:END:
The Mean Absolute Percentage Error (MAPE) is a metric used to measure the accuracy of predictions or forecasts as a percentage of the actual values. It quantifies the average percentage difference between the predicted or forecasted values and the actual values. The mathematical expression for calculating MAPE is as follows:

MAPE = (1 / n) * Σ(|(actual — forecast) / actual|) * 100%

Where:

n is the number of data points (samples).

Σ represents the sum over all data points.

|(actual — forecast) / actual| is the absolute percentage difference between the actual value and the forecasted value for each data point.

The result is multiplied by 100% to express the error as a percentage.

Let us find the MAPE for our data:
#+begin_src python
mape = np.mean(np.abs((final_test_data['y'] - final_test_data['AutoARIMA'])/ final_test_data['y'])) * 100
print(f"Mean Absolute Percentage Error (MAPE): {mape:.4f}")
#+end_src

Output :- Mean Absolute Percentage Error (MAPE): 2.6810

A MAPE of 2.6810 suggests that, on average, your forecasts deviate by about 2.6810% from the actual values. A lower MAPE indicates better accuracy, while a higher MAPE suggests less accurate forecasts.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*tR7mMpLkWITZyU-TULNvYw.png]]

** Symmetric Mean Absolute Percentage Error (SMAPE)
:PROPERTIES:
:ID:       d2f75624-8c89-4308-a491-5e3160ceff0f
:END:
The Symmetric Mean Absolute Percentage Error (SMAPE) is a metric used for measuring the accuracy of predictions or forecasts in time series analysis. It’s particularly useful when you want to assess forecast accuracy while considering both overestimation and underestimation errors. SMAPE calculates the percentage difference between predicted or forecasted values and actual values, but it symmetrically treats overestimation and underestimation errors. The mathematical expression for calculating SMAPE is as follows:

SMAPE = (1 / n) * Σ(2 * |actual — forecast| / (|actual| + |forecast|)) * 100%

Where:

SMAPE is the Symmetric Mean Absolute Percentage Error, expressed as a percentage.

n is the number of data points (samples).

Σ represents the sum over all data points.

|actual — forecast| is the absolute difference between the actual value and the forecasted value for each data point. |actual| and |forecast| are the absolute values of the actual and forecasted values, respectively.

The result is multiplied by 100% to express the error as a percentage.

Let us check the SMAPE for our data:
#+begin_src python
smape = np.mean((np.abs(final_test_data['y'] - final_test_data['AutoARIMA']) /((np.abs(final_test_data['y'] +np.abs(final_test_data['AutoARIMA'])) / 2))) * 100
print(f"Symmetric Mean Absolute Percentage Error (SMAPE): {smape:.4f}")
#+end_src

Output :- Symmetric Mean Absolute Percentage Error (SMAPE): 2.6773

SMAPE of 2.6773 suggests that, on average, our forecasts deviate by about 2.6773% from the actual values in a symmetric manner. A lower SMAPE indicates better accuracy, while a higher SMAPE suggests less accurate forecasts.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*tfTII9yq-vFJkNY6QFKeHA.png]]

** Median Absolute Percentage Error (MDAPE)
:PROPERTIES:
:ID:       fac24b35-f162-4c0d-8226-9a6573020a52
:END:
MDAPE stands for Median Absolute Percentage Error. It is a performance metric used to evaluate the accuracy of forecasts in time series analysis. MDAPE is similar to the Mean Absolute Percentage Error (MAPE), but instead of taking the mean of the absolute percentage errors, it takes the median. This makes MDAPE less sensitive to outliers than MAPE.

The formula for calculating MDAPE is as follows:

MDAPE = Median(|(Actual — Forecast) / Actual|) * 100%

Where:

Actual represents the actual values or observations in the time series.

Forecast represents the corresponding forecasted values.

MDAPE is expressed as a percentage, and it measures the median percentage difference between the actual and forecasted values. It is particularly useful when dealing with time series data that may have extreme values or outliers because it focuses on the middle value of the distribution of percentage errors.

Let’s check how MDAPE looks for our data:

#+begin_src python
mdape = np.median(np.abs((final_test_data['y'] - final_test_data['AutoARIMA'])/ final_test_data['y']))*100
print(f"Median Absolute Percentage Error (MDAPE): {mdape:.4f}")
#+end_src

Output :- Median Absolute Percentage Error (MDAPE): 1.7398

An MDAPE of 1.7398 indicates that, on average, forecasting errors are relatively low, comprising approximately 1.7398% of actual values.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*L6eLs4Bi54m9ZepPWG8HwQ.png]]

** Geometric Mean Relative Absolute Error (GMRAE)
:PROPERTIES:
:ID:       c94c23d2-395f-4650-82f2-db56b63dd899
:END:
The Geometric Mean Relative Absolute Error (GMRAE) is a metric used to assess the accuracy of predictions or forecasts in time series analysis. It takes the geometric mean of the relative absolute errors, providing a single aggregated measure of forecast accuracy. GMRAE is particularly useful when you want to consider both overestimation and underestimation errors. Here’s the mathematical formula for GMRAE:

GMRAE = (Π |(actual — forecast) / actual|)^(1/n) * 100%

Where:

GMRAE is the Geometric Mean Relative Absolute Error, expressed as a percentage.

Π represents the product over all data points.

|actual — forecast| is the absolute difference between the actual value and the forecasted value for each data point. |(actual — forecast) / actual| is the relative absolute error for each data point.

n is the number of data points (samples).

In words, GMRAE calculates the relative absolute error (the absolute difference divided by the actual value) for each data point, takes the product of these relative absolute errors, raises the result to the power of 1/n (where n is the number of data points), and then expresses the result as a percentage.

#+begin_src python
gmrae =np.prod(np.abs((final_test_data['y'] - final_test_data['AutoARIMA'])/ final_test_data['y']) ** (1/len(final_test_data["y"])))*100

print(f"Geometric Mean Relative Absolute Error (GMRAE): {gmrae:.4f}")
#+end_src

Output :- Geometric Mean Relative Absolute Error (GMRAE): 1.6522

A GMRAE value of 1.6522 indicates that, on average, the forecasted values have an error of approximately 1.6522% relative to the actual values.

[[https://miro.medium.com/v2/resize:fit:720/format:webp/1*Yzchqhzt4A8GSzM55rG03g.png]]

* Reference List
1. https://medium.com/analytics-vidhya/assessment-of-accuracy-metrics-for-time-series-forecasting-bc115b655705
