:PROPERTIES:
:ID:       a63c6ec6-a812-4694-b777-3d83a2286725
:END:
#+title: Anomaly Prediction
#+filetags:  

* Database Set-up
[[id:955c1a91-a8c5-45ad-ae0a-4d95d8ce5869][TimeScaleDB]]

#+begin_src sql
        SELECT datname FROM pg_catalog.pg_database;

        CREATE DATABASE anomalyprediction;
        CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;
#+end_src

#+begin_src sql
--Anomaly Prediction Project

--runrecord
DROP TABLE runrecord;
CREATE TABLE runrecord (
	"runid" TEXT,
	"hostname" TEXT,
  	"datamode" TEXT,
  	"controlmode" TEXT,
  	"numofnodes" INTEGER,
  	"simulationtime" REAL,
  	"payloadsize" INTEGER,
  	"datarate" TEXT,
  	"channelnumber" INTEGER,
  	"frequency" REAL,
  	"standard" TEXT,
  	"channelwidth" INTEGER,
  	"guardinterval" INTEGER,
  	PRIMARY KEY (runid, hostname)
);
--rxpacketinfo
DROP TABLE rxpacketinfo;
CREATE TABLE rxpacketinfo (
	"runid" TEXT,
  	"hostname" TEXT,
	"type" TEXT,
  	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  	"context" TEXT,
  	"nodename" TEXT,
  	"nodeid" INTEGER,
  	"signaldb" REAL,
  	"noisedb" REAL,
  	"channelfreqmhz" INTEGER,
  	"ness" INTEGER,
  	"nss" INTEGER,
  	"powerlevel" INTEGER,
  	"packetsize" INTEGER,
  	"packetuid" INTEGER,
  	PRIMARY KEY (runid, hostname, packetuid, context, time),
    FOREIGN KEY (runid, hostname)
  		REFERENCES runrecord (runid, hostname)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

SELECT create_hypertable('rxpacketinfo','time');
CREATE INDEX ON rxpacketinfo (packetuid, time DESC);

--txpacketinfo
DROP TABLE txpacketinfo;
CREATE TABLE txpacketinfo (
	"runid" TEXT,
  	"hostname" TEXT,
	"type" TEXT,
  	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  	"context" TEXT,
  	"nodename" TEXT,
  	"nodeid" INTEGER,
  	"channelfreqmhz" INTEGER,
  	"ness" INTEGER,
  	"nss" INTEGER,
  	"powerlevel" INTEGER,
  	"packetsize" INTEGER,
  	"packetuid" INTEGER,
  	PRIMARY KEY (runid, hostname, packetuid, context, time),
    FOREIGN KEY (runid, hostname)
  		REFERENCES runrecord (runid, hostname)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

SELECT create_hypertable('txpacketinfo','time');
CREATE INDEX ON rxpacketinfo (packetuid, time DESC);

--phytxdropinfo
DROP TABLE phytxdropinfo;
CREATE TABLE phytxdropinfo (
	"runid" TEXT,
  	"hostname" TEXT,
	"type" TEXT,
  	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  	"context" TEXT,
  	"nodename" TEXT,
  	"nodeid" INTEGER,
  	"packetsize" INTEGER,
  	"packetuid" INTEGER,
  	PRIMARY KEY (runid, hostname, packetuid, context, time),
    FOREIGN KEY (runid, hostname)
  		REFERENCES runrecord (runid, hostname)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

SELECT create_hypertable('phytxdropinfo','time');
CREATE INDEX ON rxpacketinfo (packetuid, time DESC);

--phytxdropinfo
DROP TABLE phyrxdropinfo;
CREATE TABLE phyrxdropinfo (
	"runid" TEXT,
  	"hostname" TEXT,
	"type" TEXT,
  	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  	"context" TEXT,
  	"nodename" TEXT,
  	"nodeid" INTEGER,
  	"packetsize" INTEGER,
  	"packetuid" INTEGER,
  	"failurereason" TEXT,
  	PRIMARY KEY (runid, hostname, packetuid, context, time),
    FOREIGN KEY (runid, hostname)
  		REFERENCES runrecord (runid, hostname)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

SELECT create_hypertable('phyrxdropinfo','time');
CREATE INDEX ON rxpacketinfo (packetuid, time DESC);

--queuedropinfo
DROP TABLE queuedropinfo;
CREATE TABLE queuedropinfo (
	"runid" TEXT,
  	"hostname" TEXT,
	"type" TEXT,
  	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  	"context" TEXT,
  	"nodename" TEXT,
  	"nodeid" INTEGER,
  	"packetsize" INTEGER,
  	"packetuid" INTEGER,
  	PRIMARY KEY (runid, hostname, packetuid, context, time),
    FOREIGN KEY (runid, hostname)
  		REFERENCES runrecord (runid, hostname)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

#+end_src

* Distribution
[[id:fb9ea8e3-b517-493a-bbdf-b41c87985f4c][Nikagumi Rice Distribution]]

* [[id:2bbcea1e-04c3-4a26-95de-28138b78e2d4][c++ runID]]

* [[id:d1323e7d-033e-405a-8967-bf4ee4bc855e][Jupyter]]
#+begin_src bash
conda create -n anomaly python=3.7.7
conda activate anomaly
conda install notebook ipykernel
ipython kernel install --user --name anomaly --display-name "Python (anomaly)"
conda deactivate
#+end_src


* Papers
+ [[id:cb8b4f66-a3f9-4079-86fc-0577f080a58c][Deep Learning for multivariate time series data Anomaly Detection]]

* Reference List
1.
