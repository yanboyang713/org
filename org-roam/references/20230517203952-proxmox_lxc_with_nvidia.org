:PROPERTIES:
:ID:       fdc7a707-4aa9-4470-9646-a7ca458f5c67
:END:
#+title: proxmox LXC with nvidia
#+filetags:  
* Pre-requires
+ [[id:6795991e-6e79-40f8-a72c-28e23b3d10ef][Container Runtimes]]
+ [[id:77bd7428-f1ee-4306-8d5a-62f38134dfc5][Proxmox VE]]
+ [[id:b0ce2dca-a29b-4bb0-b064-ea56912cd394][proxmox LXC]]
+ [[id:d6be6fc0-4aa7-45a7-bc65-e81f2a0723a2][Nvidia]]
 
* [[id:3543b112-9d03-468c-9b9d-bcbf798907ea][Find NVIDIA GPU Model Name]]

* Prepare proper driver download link
Find the proper driver at the [[https://www.nvidia.com/download/index.aspx?lang=en-us][NVidia website]]

*Note: Make sure to select "Linux 64-bit" as your OS*

[[https://i.imgur.com/TaZBMK4.png]]

Hit the "Search" button.

[[https://i.imgur.com/jrm6API.png]]

Hit the "Download" button.

[[https://i.imgur.com/QsxIBKH.png]]

*Right-click* the download button and "Copy link address".

[[https://i.imgur.com/ZKAnrGO.png]]

* Proxmox Host Set-up
SSH into to your Proxmox instace.

Create the file */etc/modprobe.d/nvidia-installer-disable-nouveau.conf* with the following contents:

#+begin_src file
# generated by nvidia-installer
blacklist nouveau
options nouveau modeset=0
#+end_src

Reboot the machine:
#+begin_src bash
reboot now
#+end_src

Run the following:
#+begin_src bash
apt install build-essential pve-headers-$(uname -r)
wget <link you copied>
chmod +x ./NVIDIA-Linux-x86_64-<VERSION>.run
./NVIDIA-Linux-x86_64-<VERSION>.run
#+end_src

Edit `/etc/modules-load.d/modules.conf` and add the following to the end of the file:
#+begin_src file
nvidia
nvidia_uvm
#+end_src
[[https://i.imgur.com/AuhYt4h.png]]

Run the following:
#+begin_src bash
update-initramfs -u
#+end_src

[[https://i.imgur.com/rWJ6UQB.png]]

Create the file `/etc/udev/rules.d/70-nvidia.rules` and add the following:

#+begin_src file
# /etc/udev/rules.d/70-nvidia.rules
# Create /nvidia0, /dev/nvidia1 â€¦ and /nvidiactl when nvidia module is loaded
KERNEL=="nvidia", RUN+="/bin/bash -c '/usr/bin/nvidia-smi -L && /bin/chmod 666 /dev/nvidia*'"
# Create the CUDA node when nvidia_uvm CUDA module is loaded
KERNEL=="nvidia_uvm", RUN+="/bin/bash -c '/usr/bin/nvidia-modprobe -c0 -u && /bin/chmod 0666 /dev/nvidia-uvm*'"
#+end_src

[[https://i.imgur.com/NRGOWgy.png]]

Reboot the machine.

* For each container
SSH into the Proxmox.

Run the following:
#+begin_src bash
modprobe nvidia-uvm
ls /dev/nvidia* -l
#+end_src

[[https://i.imgur.com/mOHirL5.png]]

*Note these numbers, you'll need them in the next step*
[[https://i.imgur.com/DU6fMSY.png]]

Edit `/etc/pve/lxc/<container ID>.conf` and add the following:
#+begin_src file
lxc.cgroup.devices.allow: c <number from previous step>:* rwm
lxc.cgroup.devices.allow: c <number from previous step>:* rwm
lxc.cgroup.devices.allow: c <number from previous step>:* rwm
lxc.mount.entry: /dev/nvidia0 dev/nvidia0 none bind,optional,create=file
lxc.mount.entry: /dev/nvidiactl dev/nvidiactl none bind,optional,create=file
lxc.mount.entry: /dev/nvidia-uvm dev/nvidia-uvm none bind,optional,create=file
lxc.mount.entry: /dev/nvidia-modeset dev/nvidia-modeset none bind,optional,create=file
lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-uvm-tools none bind,optional,create=file
lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-caps/nvidia-cap1 none bind,optional,create=file
lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-caps/nvidia-cap2 none bind,optional,create=file
#+end_src

*NOTE*: [[https://forum.proxmox.com/threads/pve-7-0-lxc-intel-quick-sync-passtrough-not-working-anymore.92025/][pve 7.x should use cgroup2]]

TLDR: lxc.cgroup.devices.allow MUST be changed to lxc.cgroup2.devices.allow

[[https://i.imgur.com/kNkfzyP.png]]

** Container/LXC
SSH into your container.

Run the following:
#+begin_src bash
dpkg --add-architecture i386
apt update
apt install libc6:i386

wget <link you copied for the Proxmox step>
chmod +x ./NVIDIA-Linux-x86_64-<VERSION>.run
./NVIDIA-Linux-x86_64-<VERSION>.run --no-kernel-module
#+end_src

Reboot the container.

*** CUDA

SSH back into your container.

Run the following:
#+begin_src bash
apt install nvidia-cuda-toolkit nvidia-cuda-dev
#+end_src

**Note: Plex DOES NOT USE THE GPU until you install CUDA**

Plex will pick up the fact that you have a GPU in the install process and will enable the hardware transcoding checkbox, but it will NOT use the GPU until CUDA is installed.

*** Python/cuDNN

SSH into your container.

Run the following:
#+begin_src bash
apt install python3 python3-dev python3-pip python3-pycuda
#+end_src

Check your CUDA version:
#+begin_src bash
nvidia-smi
#+end_src

[[https://i.imgur.com/ZTOSjDP.png]]

* Reference List
1. https://gist.github.com/egg82/90164a31db6b71d36fa4f4056bbee2eb
