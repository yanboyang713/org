:PROPERTIES:
:ID:       9d91bf12-660c-42df-9b76-5bafdd255251
:END:
#+title: Cargo
#+filetags:

Here we want to give a brief overview of what Cargo is and how it fits into the wider ecosystem.

* Installation
Please follow the instructions on https://rustup.rs/.

Run the following in your terminal, then follow the onscreen instructions.
#+begin_src bash
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#+end_src

This will give you the
+ Cargo build tool (cargo)
+ the Rust compiler (rustc)
+ rustup, a command line utility that you can use to install/switch toolchains, setup cross compilation, etc.

* Troubleshooting
To check whether you have Rust installed correctly, open a shell and enter this line:
#+begin_src bash
$ rustc --version
#+end_src

You should see the version number, commit hash, and commit date for the latest stable version that has been released, in the following format:
#+begin_src bash
rustc x.y.z (abcabcabc yyyy-mm-dd)
#+end_src

#+begin_src console
(base) [yanboyang713@archlinux ~]$ cargo --version
cargo 1.71.0 (cfd3bbd8f 2023-06-08)
#+end_src

If you see this information, you have installed Rust successfully! If you don’t see this information, check that Rust is in your %PATH% system variable as follows.
In Linux and macOS, use:

#+begin_src bash
$ echo $PATH
#+end_src

If that’s all correct and Rust still isn’t working, there are a number of places you can get help. Find out how to get in touch with other Rustaceans (a silly nickname we call ourselves) on the [[https://www.rust-lang.org/community][community page]].

* The Rust Ecosystem
The Rust ecosystem consists of a number of tools, of which the main ones are:
+ rustc: the Rust compiler which turns .rs files into binaries and other intermediate formats.
+ cargo: the Rust dependency manager and build tool. Cargo knows how to download dependencies, usually hosted on https://crates.io, and it will pass them to rustc when building your project. Cargo also comes with a built-in test runner which is used to execute unit tests.
+ rustup: the Rust toolchain installer and updater. This tool is used to install and update rustc and cargo when new versions of Rust is released. When a new version of Rust is released, simply type *rustup update* to update. In addition, rustup can also download documentation for the standard library. You can have multiple versions of Rust installed at once and rustup will let you switch between them as needed.


*Notes*:
+ Rust has a rapid release schedule with a new release coming out every six weeks. New releases maintain backwards compatibility with old releases — plus they enable new functionality.
+ There are three release channels: “stable”, “beta”, and “nightly”.
+ New features are being tested on “nightly”, “beta” is what becomes “stable” every six weeks.
+ Dependencies can also be resolved from alternative [[id:9176c5fc-75e8-42f7-824d-ab43f090e63b][registries]], git, folders, and more.
+ Rust also has [[id:549f260d-d3be-4ad0-97c1-1c76b6727585][editions]]: the current edition is Rust 2021. Previous editions were Rust 2015 and Rust 2018.
  + The editions are allowed to make backwards incompatible changes to the language.
  + To prevent breaking code, editions are opt-in: you select the edition for your crate via the Cargo.toml file.
  + To avoid splitting the ecosystem, Rust compilers can mix code written for different editions.
  + Mention that it is quite rare to ever use the compiler directly not through cargo (most users never do).
  + It might be worth alluding that Cargo itself is an extremely powerful and comprehensive tool. It is capable of many advanced features including but not limited to:
    + Project/package structure
    + [[id:e50cab8e-5f5e-422a-9f2f-a53237491dcd][workspaces]]
    + Dev Dependencies and Runtime Dependency management/caching
    + [[id:aeb03cfd-41d6-4824-93bf-c1a75999c22d][build scripting]]
    + [[id:b98dfac4-6a0e-4e24-86d8-5b2c9b88ce3d][global installation]]
    + It is also extensible with sub command plugins as well (such as [[id:b08c25e0-dba1-4f14-953c-fd4feb80eb80][cargo clippy]]).

Read more from the official [[id:4f68cc09-4bb6-465d-ac10-b225ba2b4e06][Cargo Book]].
